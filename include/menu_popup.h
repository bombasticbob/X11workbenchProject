//////////////////////////////////////////////////////////////////////////////////////////
//                                                                             _        //
//    _ __ ___    ___  _ __   _   _        _ __    ___   _ __   _   _  _ __   | |__     //
//   | '_ ` _ \  / _ \| '_ \ | | | |      | '_ \  / _ \ | '_ \ | | | || '_ \  | '_ \    //
//   | | | | | ||  __/| | | || |_| |      | |_) || (_) || |_) || |_| || |_) |_| | | |   //
//   |_| |_| |_| \___||_| |_| \__,_|_____ | .__/  \___/ | .__/  \__,_|| .__/(_)_| |_|   //
//                                 |_____||_|           |_|           |_|               //
//                                                                                      //
//                        generic popup menu implementation                             //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

/*****************************************************************************

    X11workbench - X11 programmer's 'work bench' application and toolkit
    Copyright (c) 2010-2016 by Bob Frazier (aka 'Big Bad Bombastic Bob')
                             all rights reserved

  DISCLAIMER:  The X11workbench application and toolkit software are supplied
               'as-is', with no waranties, either implied or explicit.

  BSD-like license:

  There is no restriction as to what you can do with this software, so long
  as you include the above copyright notice and DISCLAIMER for any distributed
  work that is equal to or derived from this one, along with this paragraph
  that explains the terms of the license if the source is also being made
  available.  A "derived work" describes a work that uses a significant portion
  of the source files or algorithms that are included with this one.
  Specifically excluded from this are files that were generated by the software,
  or anything that is included with the software that is part of another package
  (such as files that were created or added during the 'configure' process).
  Specifically included is the use of part or all of any of the X11 workbench
  toolkit source or header files in your distributed application.  If you do not
  ship the source, the above copyright statement is still required to be placed
  in a reasonably prominent place, such as documentation, splash screens, and/or
  'about the application' dialog boxes.

  Use and distribution are in accordance with GPL, LGPL, and/or the above
  BSD-like license.  See COPYING and README files for more information.


  Additional information at http://sourceforge.net/projects/X11workbench

******************************************************************************/

/** \file menu_bar.h
  * \brief Definition file for menu popup window structures and API functions
  *
  * This is the definition file for menu popup window functions and structures
*/


#ifndef MENU_POPUP_H_INCLUDED
#define MENU_POPUP_H_INCLUDED

#include "menu_bar.h"

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus


#define MENU_POPUP_WINDOW_TAG (*((const unsigned int *)"MWMP"))

typedef struct
{
  unsigned int ulTag;
  Window wSelf, wBar, wOwner;

  WBMenu *pMenu;

  int iX, iY, iWidth, iHeight;  // dimensions and position of items within popup window
  int iColumns;  // total number of columns (currently 1)
  int iVisible;  // total number of visible menu items (including separators)
  int iTop;      // index of the 'top' visible menu item (zero-based) for scrolling menus
  int iSelected;  // currently selected menu (for display purposes)
  int iFlags;  // flags that determine behavior (reserved)

} WBMenuPopupWindow;  // located at offset 0 in window data

WBMenuPopupWindow *MBCreateMenuPopupWindow(Window wIDParent, Window wIDOwner, WBMenu *pMenu,
                                           int iX, int iY, int iFlags);
  // pass 'iX and 'iY' for the menu's origin location.  'pMenu' points to the popup menu and
  // it must contain a list of popup menus that it makes use of.

int MBMenuDoModal(WBMenuPopupWindow *);
  // returns 0 for 'ok', non-zero to represent an error
  // on return the 'WBMenuPopupWindow' pointer will be invalid, and the popup
  // (and any others it may have created) will have been destroyed

WBMenuPopupWindow *MBFindMenuPopupWindow(WBMenu *pSubMenu);  // find first (active) window that uses sub-menu 'pMenu'


static __inline__ WBMenuPopupWindow *MBGetMenuPopupWindowStruct(Window wID)
{
  WBMenuPopupWindow *pRval = (WBMenuPopupWindow *)WBGetWindowData(wID, 0);  // offset 0 for window-specific structs

  if(pRval && pRval->ulTag == MENU_POPUP_WINDOW_TAG)
    return(pRval);

  return(NULL);
}


#ifdef __cplusplus
};
#endif // __cplusplus


#endif // MENU_POPUP_H_INCLUDED

