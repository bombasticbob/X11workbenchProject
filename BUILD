X11workbench - X11 programmer's 'work bench' application and toolkit
Copyright (c) 2010-2012 by Bob Frazier (aka 'Big Bad Bombastic Bob')
all rights reserved

DISCLAIMER:  The X11workbench application and toolkit software are supplied 'as-is', with no waranties, either implied or explicit.

There is no restriction as to what you can do with this software, so long as you include the above copyright notice and DISCLAIMER for any distributed work that is equal to or derived from this one, along with this paragraph that explains the terms of the license if the source is also being made available.  A "derived work" describes a work that uses a significant portion of the source files or algorithms that are included with this one.  Specifically excluded from this are files that were generated by the software, or anything that is included with the software that is part of another package (such as files that were created or added during the 'configure' process).  Specifically included is the use of part or all of any of the X11 workbench toolkit source or header files in your distributed application.  If you do not ship the source, the above copyright statement is still required to be placed in a reasonably prominent place, such as documentation, splash screens, and/or 'about the application' dialog boxes.

(for full license text, see COPYING)

This software has been tested on Linux and FreeBSD (version 6 and later)
If you have trouble building and/or running this software, and cannot
determine an appropriate workaround, please contact the author.


  sourceforge:  
    https://x11workbench.sourceforge.net/
    https://sourceforge.net/project/x11workbench
  HEAD:
    https://downloads.sourceforge.net/project/x11workbench/HEAD/X11workbench-1.0.tar.gz
  RELEASE:  TBD
    https://downloads.sourceforge.net/project/x11workbench/RELEASE/X11workbench-1.0.tar.gz
  ARCHIVE:  TBD
    https://downloads.sourceforge.net/project/x11workbench/ARCHIVE/X11workbench-1.0.tar.gz

  website: 
    http://www.mrp3.com/

Debian Linux:  install a standard X11 distribution, along with the
               'build-essential' package, 'xorg-dev', and the autotools
               packages 'autoconf' 'automake' and 'autotools-dev'


FreeBSD notes:  run depends:   x11/libXpm and x11/xorg-clients
                build depends: devel/autotools  (meta-port)



MOTIVATION AND PHILOSOPHY
-------------------------

'DLL Hell' is starting to creep into the non-windows world of Linux
and BSD.  Additionally, the edit controls offered by Qt and GTK just
don't do the kinds of things that PROGRAMMERS need.  And though these
toolkits are cross-platform (being open source), getting a cross-platform
version of them working on a NEW platform is extremely difficult.

Also there appears to be a general LACK of really good open source
integrated development packages for the C and C++ languages.  If you
want developers to write code for Linux or BSD for X11, you need to
provide them with tools that enable them to easily do so, or the cost
for porting existing applications will be too high.

Without mentioning names, certain open source packages restrict you
to specific toolkits, don't have decent C or C++ support, or really
stink when it comes to creating a simple dialog box.  Other commercial
tools also stink when it comes to their over-complexity and lack of
editor features that I personally find extremely important.  If I am
going to pay for something I want it to be usable by ME.

It also needs to be VERY simple to distribute X11 applications.  The
current GUI toolkits, with their EXCESSIVELY LONG LISTS of shared library
pre-requisites and run requirements, make it "that much more difficult"
for the developer that wants his C or C++ application to run on a
non-Windows platform.  And you can't simply assume that all of those
packages will already be installed, either.

By using X11 client libraries as the ONLY required subsystem necessary
to run the application, you avoid the need of adapting a large amount
of 3rd party code to your environment, MOST of which won't even be used
by your application!  After all, I wouldn't need all of the gtk multimedia
and font support just to write THIS application.

The difficulty arises when you look at just how 'low level' X11 really is.
All of the things you take for granted in developing an application for
a GUI remind you of why toolkits like Qt and gtk exist.

X11workbench has its own built-in lightweight toolkit that's designed
specifically for X11workbench.  You are, of course, free to use it in
your own code.  Since it was designed specifically for X11workbench,
it's as lean and mean as it can be.  The down side, of course, is the
amount of time it took for me to develop it.

To make X11workbench as expandable and compatible as possible, the
interface it uses for 'plug-in' extensions is as broadly compatible
as possible.

Accessibility features are limited to font selection and keyboard
hot-keys.  Great care has been taken to support keyboard-based
shortcuts for every menu option, so operation WITHOUT a mouse is
not only possible, it may even be better.




INSTALLATION
------------

See 'INSTALL' file included with this distribution

Prior to installation, you may have to use the 'autotools' to create
or re-create some necessary files.  Specifically, you need the aclocal,
autoheader, autoconf, and automake programs.

To do so, enter the following commands:

aclocal
autoheader
autoconf
automake --add-missing --copy

(on some operating systems the program names may differ slightly, such
 as on FreeBSD, since the program names may reflect the version)

You should also run 'autoscan' at least once and do what it says.

Following this step, run

./configure

and then

make



RE-DISTRIBUTION
---------------

Re-distribution of this application is permitted according to the
license requirements specified in COPYING.

Also, please include the entire contents of THIS file with any
re-distribution of the X11workbench application and/or toolkit.



CODE SUBMISSIONS
----------------

Basic style guide for code submissions are as follows:

a) BSD style (aka Allman style) indentation.  Other styles are simply
   irritating and/or are more difficult to read.
   (see http://en.wikipedia.org/wiki/Indent_style)

b) 2 spaces per indent, no hard tabs (this eliminates the possibility
   that 'other editors' display the code differently).  The exception
   to the 'hard tab' rule is (of course) any 'make' file or autotool
   files that generate 'make' files.  These files may require hard tabs
   in the first column.

c) 'hungarian' notation when possible.  This may be a little nauseating
   to some anti-microsoft purists, but it helps make the code more
   readable (and maintainable by others, particularly me).

d) global variables should ONLY be used when ABSOLUTELY NECESSARY
   (the code is SUPPOSED to be somewhat object-oriented, ok?).  If you
   must use a global variable, give it a name that's self-descriptive.

e) ANSI C and POSIX compatibility whenever possible.

f) maximum cross-platform compatibility (use autotool features to make
   sure this happens).  The current target platforms are:

      Linux (all flavors)
      FreeBSD (6-STABLE and later)
      Interix (Microsoft's Services for Unix, aka 'SFU')
      Cygwin
      Apple (X11 compatibility)

   X server interoperatibility should be as wide-ranged as possible.
   The current targeted X servers and/or client libraries are:

      Xorg
      Xfree86
      XMing (on Windows)

   The code should also work with just about any window manager.  The
   following window managers (at a minumum) must be supported:

      gnome 2.x and 3.x
      Mate
      KDE
      lxde
      fluxbox (and other 'blackbox' derived)
      twm (and clones)

g) minimal 'run dependencies'.  If you MUST add a dependency, make sure it
   compiles on every target platform AND provide some kind of alternate
   code [via autotools] for when the library/package isn't installed or
   available.  A good example of this is 'libXpm' which is NOT present in
   Interix, and there is specific code in place to deal with this.


Author testing has been done on the following platforms:
  FreeBSD 7.x, 8.x, 9.x (gnome 2, fluxbox)
  Debian (squeeze,wheezy) linux with 2.6 kernel (mate,gnome,KDE)
  Interix (on Windows XP) with XMing
  Cygwin (on Windows XP) with XMing


